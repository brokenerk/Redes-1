/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sniffer;
import java.io.File;
import java.nio.ByteBuffer;
import java.util.Date;
import javax.swing.JOptionPane;
  
import org.jnetpcap.Pcap;  
import org.jnetpcap.PcapIf;
import org.jnetpcap.packet.PcapPacket;
import org.jnetpcap.packet.PcapPacketHandler;
import org.jnetpcap.PcapBpfProgram;
import org.jnetpcap.PcapDumper;
import org.jnetpcap.PcapHandler;


public class Tramas extends javax.swing.JFrame {

    /**
     * Creates new form TramasResultantes
     */
    public Tramas() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TxtArea = new javax.swing.JTextArea();
        BtnExportar = new javax.swing.JButton();
        BtnEstadisticas = new javax.swing.JButton();

        setTitle("Resultados");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        TxtArea.setColumns(20);
        TxtArea.setRows(5);
        jScrollPane1.setViewportView(TxtArea);

        BtnExportar.setText("Exportar .pcap");
        BtnExportar.setEnabled(false);
        BtnExportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnExportarActionPerformed(evt);
            }
        });

        BtnEstadisticas.setText("Generar Estadisticas");
        BtnEstadisticas.setEnabled(false);
        BtnEstadisticas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnEstadisticasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 820, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BtnExportar, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BtnEstadisticas, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtnExportar, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnEstadisticas, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnEstadisticasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnEstadisticasActionPerformed
        // TODO add your handling code here:
        Protocolos.enviaGrafico();
    }//GEN-LAST:event_BtnEstadisticasActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_formWindowClosing

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_formWindowClosed

    private void BtnExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnExportarActionPerformed
       PcapDumperExample.exporta(pcap);
       pcap.close();
    }//GEN-LAST:event_BtnExportarActionPerformed
    int flags;
    Pcap pcap;
    String ofile = "tramas.pcap";
    
    
    
    public void cacharTramas(){
        PcapPacketHandler<String> jpacketHandler = new PcapPacketHandler<String>() {

			public void nextPacket(PcapPacket packet, String user) {
                                
				TxtArea.append(String.format("\n\n\nPaquete recibido el %s caplen=%-4d len=%-4d %s\n",
				    new Date(packet.getCaptureHeader().timestampInMillis()),
				    packet.getCaptureHeader().caplen(),  // Length actually captured
				    packet.getCaptureHeader().wirelen(), // Original length
				    user                                 // User supplied object
				    ));
                                
                                TxtArea.append("\nTrama:\n");
                                for(int i=0;i<packet.size();i++){
                                	TxtArea.append(String.format("%02X ",packet.getUByte(i)));
                                	if(i%16==15)
                                    	TxtArea.append("\n");
                                }
                                //TxtArea.append("\n\nTrama: \n"+ packet.toHexdump()+"\n"); 

                                TxtArea.append("\n\nMAC destino:\n");
                                for(int i=0;i<6;i++){
                                TxtArea.append(String.format("%02X ",packet.getUByte(i)));
                                }
                                TxtArea.append("\n");

                                TxtArea.append("MAC origen:\n");
                                for(int i=6;i<12;i++){
                                TxtArea.append(String.format("%02X ",packet.getUByte(i)));
                                }
                                TxtArea.append("\n");

                                TxtArea.append("Tipo/Longitud:\n");
                                for(int i=12;i<14;i++){
                                TxtArea.append(String.format("%02X ",packet.getUByte(i)));
                                }
                                TxtArea.append("\n\n");
                            
                                int tipo = (packet.getUByte(12)==0)?packet.getUByte(13):(packet.getUByte(12)*256)+packet.getUByte(13);

                                

                                if(tipo<1500){
                                    Protocolos.IEEE802(packet, tipo);
                                }
                                else{
                                    Protocolos.TipodeProtocolo(packet);
                                }
                              
                                
                                
                                
                        
                                }
        };

        pcap.loop(10, jpacketHandler, "");
        
        
        BtnEstadisticas.setEnabled(true);
        BtnExportar.setEnabled(true);
	
    }
    
    public void filtro(String exp){
         PcapBpfProgram filter = new PcapBpfProgram();
            String expression = exp; // "port 80";
            int optimize = 0; // 1 means true, 0 means false
            int netmask = 0;
            int r2 = pcap.compile(filter, expression, optimize, netmask);
            if (r2 != Pcap.OK) {
                System.out.println("Filter error: " + pcap.getErr());
            }//if
            pcap.setFilter(filter);
    }
    
    
    public void archivoPcap(String ruta, StringBuilder errbuff){
        TxtArea.setText("");
        Protocolos.Num_ethernet=0;
       Protocolos.Num_ieee=0;
       Protocolos.Num_llci=0; 
       Protocolos.Num_llcg=0; 
       Protocolos.Num_arp=0;
       Protocolos.Num_rarp=0; 
       Protocolos.Num_ip4=0;
       Protocolos.Num_tcp=0;
       Protocolos.Num_udp=0;
       Protocolos.Num_icmp=0; 
       Protocolos.Num_ip6=0;
        BtnEstadisticas.setEnabled(false);
        BtnExportar.setEnabled(false);
        try{
            pcap = Pcap.openOffline(ruta, errbuff);//Abrimos archivo seleccionado
				
            if(pcap==null){
                JOptionPane.showMessageDialog(null,"Error al abrir archivo: "+ errbuff.toString(),"ERROR",JOptionPane.ERROR_MESSAGE);
            }
            else{
                cacharTramas();
            }

        }
	catch(Exception ex){		
            JOptionPane.showMessageDialog(null,"ERROR INCIAR"+ex.toString(),"ERROR",JOptionPane.ERROR_MESSAGE);
	}
        
    }
    
    public void alvuelo(PcapIf disp, int tpaquetes, int tiempo, int modo, String filtrado, StringBuilder errbuff){
       TxtArea.setText("");
       Protocolos.Num_ethernet=0;
       Protocolos.Num_ieee=0;
       Protocolos.Num_llci=0; 
       Protocolos.Num_llcg=0; 
       Protocolos.Num_arp=0;
       Protocolos.Num_rarp=0; 
       Protocolos.Num_ip4=0;
       Protocolos.Num_tcp=0;
       Protocolos.Num_udp=0;
       Protocolos.Num_icmp=0; 
       Protocolos.Num_ip6=0;

        BtnEstadisticas.setEnabled(false);
        BtnExportar.setEnabled(false);
        TxtArea.append("Tamaño paquetes: "+tpaquetes+"\n");
       TxtArea.append("Tiempo: "+tiempo+"\n");
       TxtArea.append("Dispositivo: "+disp.getDescription()+"\n");
       TxtArea.append("Promiscuo: "+modo+"\n");
       TxtArea.append("Filtrado: "+filtrado+"\n");

        
       int snaplen = 64 * tpaquetes;           // Capture all packets, no trucation
       
       if(modo==1){
           flags = Pcap.MODE_PROMISCUOUS;
       }
       else if (modo==0){
           flags = Pcap.MODE_NON_PROMISCUOUS;
       }
       
	int timeout = tiempo * 1000;           // 10 seconds in millis
        pcap= Pcap.openLive(disp.getName(), snaplen, Pcap.MODE_PROMISCUOUS, timeout, errbuff);

	if (pcap == null) {
            System.err.printf("Error while opening device for capture: "+ errbuff.toString());
            return;
	}
        
        filtro(filtrado);
        cacharTramas();
        
        
        
        
        
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tramas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tramas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tramas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tramas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Tramas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnEstadisticas;
    private javax.swing.JButton BtnExportar;
    public static javax.swing.JTextArea TxtArea;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
